#!/bin/bash

files_dir=$(realpath "$(dirname $(readlink -f ${BASH_SOURCE[0]}))/../")

# Find all the files from the .dotfiles repository
while IFS= read -r line; do
  files+=("$line")
done < <(find $files_dir -type f -not -path "*.git/*" -not -path "*/bin/*" -not -path "*README*" -not -path "*/.config/fish/*")

# For Fish we do add special paths manually
files+=("$files_dir/.config/fish/functions")
files+=("$files_dir/.config/fish/completions")
files+=("$files_dir/.config/fish/conf.d")
files+=("$files_dir/.config/fish/themes")
files+=("$files_dir/.config/fish/config.fish")
files+=("$files_dir/.config/fish/environment.fish")
files+=("$files_dir/.config/fish/fish_plugins")

# Find symlinks that might not exists anymore in the ~/.config folder.
while IFS= read -r line; do
  files_to_delete+=("$line")
done < <(find ~/.config/nvim -type l ! -exec test -e {} \; -print)

# Find symlinks that still point to the current files
for source in "${files[@]}"; do
  destination="$HOME${source/$files_dir/}"
  if [[ -e ${destination} ]]; then
    files_to_delete+=("$destination")
  fi
done

# printf '%s\n' "${files_to_delete[@]}"

for source in "${files_to_delete[@]}"; do
  echo "Deleting file $source..."
  rm -r $source
  [[ $? -ne 0 ]] && echo "Failed deleting file $source." && exit $?
done

# Find directories that are empty and delete them.
while IFS= read -r directory; do
  echo "Deleting directory $directory..."
  rm -r $directory
  [[ $? -ne 0 ]] && echo "Failed deleting directory $directory." && exit $?
done < <(find ~/.config/nvim -type d -empty)
